{"ast":null,"code":"// @ is an alias to /src\nimport ReadCRUD from '@/components/ReadCRUD.vue';\nimport { public_key, ts, hash, populatemyCharacters, getmyCharacters, myCharacters, setmyCharacters } from '../marvel.js';\nimport axios from 'axios';\nexport default {\n  name: 'ReadView',\n\n  data() {\n    return {\n      chars: []\n    };\n  },\n\n  components: {\n    ReadCRUD\n  },\n  created: function () {\n    this.listCharacters();\n  },\n  methods: {\n    listCharacters() {\n      if (JSON.parse(JSON.stringify(myCharacters)).length == 0) {\n        console.log(\"listCharacters\");\n        axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`).then(result => {\n          result.data.data.results.forEach(element => {\n            populatemyCharacters(element);\n          });\n          this.chars = getmyCharacters();\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        this.chars = getmyCharacters();\n      }\n    },\n\n    deleteCharacter(id) {\n      let option = confirm(\"Are you sure you want to delete this character?\");\n\n      if (option) {\n        this.chars = getmyCharacters().filter(char => char.id != id);\n        setmyCharacters(this.chars);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAKA;AACA,OAAOA,QAAP,MAAqB,2BAArB;AACA,SAAQC,UAAR,EAAmBC,EAAnB,EAAsBC,IAAtB,EAA2BC,oBAA3B,EAAgDC,eAAhD,EAAgEC,YAAhE,EAA6EC,eAA7E,QAAmG,cAAnG;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;;EAGbC,IAAI,GAAG;IACD,OAAO;MACHC,KAAK,EAAE;IADJ,CAAP;EAGH,CAPU;;EAQbC,UAAU,EAAE;IACVZ;EADU,CARC;EAWba,OAAO,EAAC,YAAU;IACZ,KAAKC,cAAL;EACL,CAbY;EAcbC,OAAO,EAAE;IACHD,cAAc,GAAG;MACb,IAAIE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,YAAf,CAAX,CAAD,CAA2Ca,MAA3C,IAAqD,CAAxD,EAA0D;QACtDC,OAAO,CAACC,GAAR,CAAY,gBAAZ;QACAb,KAAK,CAACc,GAAN,CAAW,sDAAqDpB,EAAG,WAAUD,UAAW,SAAQE,IAAK,EAArG,EACKoB,IADL,CACWC,MAAD,IAAY;UACdA,MAAM,CAACd,IAAP,CAAYA,IAAZ,CAAiBe,OAAjB,CAAyBC,OAAzB,CAAiCC,OAAM,IAAK;YACxCvB,oBAAoB,CAACuB,OAAD,CAApB;UACH,CAFD;UAGA,KAAKhB,KAAL,GAAaN,eAAe,EAA5B;QACH,CANL,EAOKuB,KAPL,CAOYC,KAAD,IAAW;UACdT,OAAO,CAACC,GAAR,CAAYQ,KAAZ;QACH,CATL;MAUJ,CAZA,MAaI;QACC,KAAKlB,KAAL,GAAaN,eAAe,EAA5B;MACL;IAEH,CAnBE;;IAoBHyB,eAAe,CAACC,EAAD,EAAI;MACf,IAAIC,MAAK,GAAIC,OAAO,CAAC,iDAAD,CAApB;;MACA,IAAGD,MAAH,EAAU;QACN,KAAKrB,KAAL,GAAaN,eAAe,GAAG6B,MAAlB,CAAyBC,IAAG,IAAKA,IAAI,CAACJ,EAAL,IAAWA,EAA5C,CAAb;QACAxB,eAAe,CAAC,KAAKI,KAAN,CAAf;MACJ;IACJ;;EA1BG;AAdI,CAAf","names":["ReadCRUD","public_key","ts","hash","populatemyCharacters","getmyCharacters","myCharacters","setmyCharacters","axios","name","data","chars","components","created","listCharacters","methods","JSON","parse","stringify","length","console","log","get","then","result","results","forEach","element","catch","error","deleteCharacter","id","option","confirm","filter","char"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\views\\ReadView.vue"],"sourcesContent":["<template>\r\n    <ReadCRUD :characters = \"chars\" :deleteChar =\"deleteCharacter\" ></ReadCRUD>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport ReadCRUD from '@/components/ReadCRUD.vue'\r\nimport {public_key,ts,hash,populatemyCharacters,getmyCharacters,myCharacters,setmyCharacters} from '../marvel.js'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ReadView',\r\n   \r\n  data() {\r\n        return {\r\n            chars: []\r\n        };\r\n    },\r\n  components: {\r\n    ReadCRUD\r\n  },\r\n  created:function(){\r\n        this.listCharacters();\r\n  },\r\n  methods: {\r\n        listCharacters() {\r\n            if((JSON.parse(JSON.stringify(myCharacters))).length == 0){\r\n                console.log(\"listCharacters\");\r\n                axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\r\n                    .then((result) => {\r\n                        result.data.data.results.forEach(element => {\r\n                            populatemyCharacters(element);\r\n                        }); \r\n                        this.chars = getmyCharacters();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    }); \r\n            }\r\n            else{\r\n                 this.chars = getmyCharacters();\r\n            }\r\n            \r\n        },\r\n        deleteCharacter(id){\r\n            let option = confirm(\"Are you sure you want to delete this character?\");\r\n            if(option){\r\n                this.chars = getmyCharacters().filter(char => char.id != id);\r\n                setmyCharacters(this.chars);\r\n            }    \r\n        }\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}