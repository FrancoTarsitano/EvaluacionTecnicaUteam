{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\":character = \\\"char\\\" :createChar =\\\"addNewCharacter\\\" \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CreateCRUD = _resolveComponent(\"CreateCRUD\");\n\n  return _openBlock(), _createBlock(_component_CreateCRUD, null, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;iDACgB;;;;;uBAAZA,aAA4EC,qBAA5E,EAA4E,IAA5E,EAA4E;sBAAhE,MAAmD,aAAa;;;;EAAA,CAA5E","names":["_createBlock","_component_CreateCRUD"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\views\\CreateView.vue"],"sourcesContent":["<template>\r\n    <CreateCRUD>:character = \"char\" :createChar =\"addNewCharacter\" </CreateCRUD>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport CreateCRUD from '@/components/CreateCRUD.vue'\r\nimport {populatemyCharacters, getmyCharacters} from '../marvel.js'\r\n\r\nexport default {\r\n  name: 'CreateView',\r\n  components: {\r\n    CreateCRUD\r\n  },\r\n  data: function () {\r\n    return {\r\n        char: {}\r\n      }\r\n    },\r\n  methods: {\r\n        addNewCharacter(){\r\n            console.log(\"addNewCharacter\"); \r\n            let newId = parseInt(getmyCharacters()[0].id);\r\n            newId += 1;\r\n            console.log(newId)\r\n            let charInfo = {id: newId, name: this.char.name, description: this.char.description };\r\n            // this.char.push(sendData);\r\n            this.char = charInfo;\r\n            console.dir(this.char);\r\n            //ver si poner un catch \r\n            populatemyCharacters(this.char);\r\n            alert(\"Your new character has been created!\");\r\n            console.dir(getmyCharacters()); \r\n            this.char = {name: \"\", description: \"\"};    \r\n        }\r\n    },  \r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}