{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ReadCRUD = _resolveComponent(\"ReadCRUD\");\n\n  return _openBlock(), _createBlock(_component_ReadCRUD, {\n    characters: $data.chars\n  }, null, 8\n  /* PROPS */\n  , [\"characters\"]);\n}","map":{"version":3,"mappings":";;;;uBACIA,aAA2CC,mBAA3C,EAA2C;IAAhCC,UAAU,EAAIC;EAAkB,CAA3C,EAA8B,IAA9B,EAA8B;EAAA;EAA9B,EAA8B,cAA9B","names":["_createBlock","_component_ReadCRUD","characters","$data"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\views\\ReadView.vue"],"sourcesContent":["<template>\r\n    <ReadCRUD :characters = \"chars\"></ReadCRUD>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport ReadCRUD from '@/components/ReadCRUD.vue'\r\nimport {public_key,ts,hash,aux,populateAux,getAux} from '../marvel.js'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ReadView',\r\n  mixins: [populateAux],\r\n         \r\n  data() {\r\n        return {\r\n            chars: []\r\n        };\r\n    },\r\n  components: {\r\n    ReadCRUD\r\n  },\r\n    created:function(){\r\n        console.dir(this.chars);\r\n        //console.dir(JSON.parse(JSON.stringify(this.chars)));\r\n            this.listCharacters();\r\n          \r\n  },\r\n  methods: {\r\n        listCharacters() {\r\n\r\n            //if((JSON.parse(JSON.stringify(aux))).length == 0){\r\n            console.log(\"listCharacters\");\r\n                axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\r\n                .then((result) => {\r\n\r\n                console.log(result);\r\n                result.data.data.results.forEach(element => {\r\n                    if (!element.description) {\r\n                        element.description = \"No description available.\";\r\n                   }\r\n                    populateAux(element);\r\n                });\r\n                this.chars = getAux();\r\n                console.dir(aux);\r\n               \r\n            })\r\n                .catch((error) => {\r\n                console.log(error);\r\n            });\r\n            //}\r\n        }\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}