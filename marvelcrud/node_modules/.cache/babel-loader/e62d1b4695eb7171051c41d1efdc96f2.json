{"ast":null,"code":"//import axios from 'axios'\n//import {public_key,ts,hash} from '../marvel.js';\nexport default {\n  name: \"CreateCRUD\",\n  props: {\n    character_name: String,\n    character_desc: String\n  }\n}; //    return {newCharacter: this.character};\n// },\n//  mounted(){\n//     this.addCharacter();  \n//  },\n// methods:{\n// checkId(){\n//     axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\n//     .then((result)=> { \n//         var lastId = result.data.data.results.slice(-1);\n//         lastId = lastId.id + 1;\n//         var lastHero = result.data.data.results.filter(res => res.id != lastId).slice(-1);\n//         result.data.data.results.forEach(element => {\n//             if(element.id != lastHero){\n//                 this.hero.id = lastHero;\n//             }\n//         });\n//     })\n//     .catch((error) =>{\n//         console.log(error)\n//     })\n// },\n// }","map":{"version":3,"mappings":"AA6BA;AACA;AAGA,eAAe;EACVA,IAAI,EAAE,YADI;EAEVC,KAAK,EAAC;IAACC,cAAc,EAAEC,MAAjB;IAAyBC,cAAc,EAAED;EAAzC;AAFI,CAAf,C,CAQI;AACA;AACA;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEJ","names":["name","props","character_name","String","character_desc"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\components\\CreateCRUD.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Add new character\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form v-on:submit.prevent=\"addNewCharacter\">  \r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Name:</label>\r\n                        <input type=\"text\" name=\"name\" v-model=\"charactername\" id=\"name\" class=\"form-control\" aria-describedby=\"helpId\">\r\n                        <small id=\"helpId\" class=\"form-text text-muted\">Write the name of your new character</small>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"descrip\">Description:</label>\r\n                        <input type=\"text\" name=\"descrip\" v-model=\"character.descrip\" id=\"descrip\" class=\"form-control\" aria-describedby=\"helpId\">\r\n                        <small id=\"helpId\" class=\"form-text text-muted\">Write a brief description for your new character</small>\r\n                    </div>\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                        <router-link :to=\"{name:'ReadCRUD'}\" class=\"btn btn-warning\">Back</router-link>\r\n                    </div>\r\n                </form>  \r\n            </div> \r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\n//import axios from 'axios'\r\n//import {public_key,ts,hash} from '../marvel.js';\r\n\r\n\r\nexport default {\r\n     name: \"CreateCRUD\",\r\n     props:{character_name: String, character_desc: String\r\n     },\r\n    }\r\n   \r\n   \r\n\r\n    //    return {newCharacter: this.character};\r\n    // },\r\n    //  mounted(){\r\n    //     this.addCharacter();  \r\n    //  },\r\n    // methods:{\r\n\r\n        // checkId(){\r\n        //     axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\r\n        //     .then((result)=> { \r\n        //         var lastId = result.data.data.results.slice(-1);\r\n        //         lastId = lastId.id + 1;\r\n        //         var lastHero = result.data.data.results.filter(res => res.id != lastId).slice(-1);\r\n                \r\n        //         result.data.data.results.forEach(element => {\r\n        //             if(element.id != lastHero){\r\n        //                 this.hero.id = lastHero;\r\n        //             }\r\n                     \r\n        //         });\r\n               \r\n        //     })\r\n        //     .catch((error) =>{\r\n        //         console.log(error)\r\n        //     })\r\n        // },\r\n       \r\n    // }\r\n</script>"]},"metadata":{},"sourceType":"module"}