{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ReadCRUD = _resolveComponent(\"ReadCRUD\");\n\n  return _openBlock(), _createBlock(_component_ReadCRUD, {\n    characters: _ctx.characters\n  }, null, 8\n  /* PROPS */\n  , [\"characters\"]);\n}","map":{"version":3,"mappings":";;;;uBACIA,aAAiDC,mBAAjD,EAAiD;IAAtCC,UAAU,EAAIC;EAAwB,CAAjD,EAAmC,IAAnC,EAAmC;EAAA;EAAnC,EAAmC,cAAnC","names":["_createBlock","_component_ReadCRUD","characters","_ctx"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\views\\ReadView.vue"],"sourcesContent":["<template>\r\n    <ReadCRUD :characters = \"characters\" ></ReadCRUD>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport ReadCRUD from '@/components/ReadCRUD.vue'\r\nimport {public_key,ts,hash} from '../marvel.js';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ReadView',\r\n  data() {\r\n        return {\r\n            chars: this.listCharacters()\r\n        };\r\n    },\r\n  components: {\r\n    ReadCRUD\r\n  },\r\n  methods: {\r\n        listCharacters() {\r\n            axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\r\n                .then((result) => {\r\n                console.log(\"listCharacters\");\r\n                console.log(result);\r\n                result.data.data.results.forEach(element => {\r\n                    if (!element.description) {\r\n                        element.description = \"No description available.\";\r\n                    }\r\n                    this.chars.push(element);\r\n                    //this.chars.push(element);\r\n                });\r\n                if(this.character){\r\n                    this.chars.push(this.character);\r\n                }\r\n               \r\n            })\r\n                .catch((error) => {\r\n                console.log(error);\r\n            });\r\n            //     },\r\n            //     // addCharacter() {\r\n        }\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}