{"ast":null,"code":"import { getmyCharacters, setmyCharacters, populatemyCharacters } from '../marvel.js';\nimport { isProxy, toRaw } from 'vue';\nexport default {\n  data: function () {\n    return {\n      char: []\n    };\n  },\n\n  mounted() {\n    this.getCharByID();\n  },\n\n  methods: {\n    getCharByID() {\n      this.char = getmyCharacters().filter(character => character.id == this.$route.params.id);\n      let rawChar = [];\n\n      if (isProxy(this.char)) {\n        rawChar = toRaw(this.char);\n      }\n\n      this.char = {\n        name: rawChar[0].name,\n        description: rawChar[0].description\n      };\n    },\n\n    updateCharacter() {\n      this.chars = getmyCharacters().filter(char => char.id != id);\n      setmyCharacters(this.chars);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6BA,SAAQA,eAAR,EAAwBC,eAAxB,EAAwCC,oBAAxC,QAAmE,cAAnE;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,KAA/B;AAEA,eAAe;EACXC,IAAI,EAAE,YAAY;IACd,OAAO;MACHC,IAAI,EAAE;IADH,CAAP;EAGH,CALU;;EAMXC,OAAO,GAAE;IACL,KAAKC,WAAL;EACH,CARU;;EASXC,OAAO,EAAC;IACJD,WAAW,GAAE;MACT,KAAKF,IAAL,GAAYN,eAAe,GAAGU,MAAlB,CAAyBC,SAAQ,IAAKA,SAAS,CAACC,EAAV,IAAgB,KAAKC,MAAL,CAAYC,MAAZ,CAAmBF,EAAzE,CAAZ;MACA,IAAIG,OAAM,GAAI,EAAd;;MACA,IAAGZ,OAAO,CAAC,KAAKG,IAAN,CAAV,EAAsB;QAClBS,OAAM,GAAIX,KAAK,CAAC,KAAKE,IAAN,CAAf;MACJ;;MACA,KAAKA,IAAL,GAAY;QAACU,IAAI,EAAED,OAAO,CAAC,CAAD,CAAP,CAAWC,IAAlB;QAAwBC,WAAW,EAAEF,OAAO,CAAC,CAAD,CAAP,CAAWE;MAAhD,CAAZ;IACH,CARG;;IASJC,eAAe,GAAE;MACb,KAAKC,KAAL,GAAanB,eAAe,GAAGU,MAAlB,CAAyBJ,IAAG,IAAKA,IAAI,CAACM,EAAL,IAAWA,EAA5C,CAAb;MACAX,eAAe,CAAC,KAAKkB,KAAN,CAAf;IACJ;;EAZI;AATG,CAAf","names":["getmyCharacters","setmyCharacters","populatemyCharacters","isProxy","toRaw","data","char","mounted","getCharByID","methods","filter","character","id","$route","params","rawChar","name","description","updateCharacter","chars"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\components\\UpdateCRUD.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Edit Character\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form v-on:submit.prevent=\"updateCharacter\">  \r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Name:</label>\r\n                        <input type=\"text\" name=\"name\" v-model=\"char.name\" id=\"name\" class=\"form-control\" aria-describedby=\"helpId\">\r\n                        <small id=\"helpId\" class=\"form-text text-muted\">Write the name of your new character</small>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"description\">Description:</label>\r\n                        <input type=\"text\" name=\"description\" v-model=\"char.description\" id=\"description\" class=\"form-control\" aria-describedby=\"helpId\">\r\n                        <small id=\"helpId\" class=\"form-text text-muted\">Write a brief description for your new character</small>\r\n                    </div>\r\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"\">\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                        <router-link :to=\"{name:'read'}\" class=\"btn btn-warning\">Back</router-link>\r\n                    </div>\r\n                </form>  \r\n            </div> \r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport {getmyCharacters,setmyCharacters,populatemyCharacters} from '../marvel.js'\r\nimport { isProxy, toRaw } from 'vue';\r\n\r\nexport default {\r\n    data: function () {\r\n        return {\r\n            char: []\r\n        }\r\n    },   \r\n    mounted(){\r\n        this.getCharByID();\r\n    },\r\n    methods:{\r\n        getCharByID(){\r\n            this.char = getmyCharacters().filter(character => character.id == this.$route.params.id);\r\n            let rawChar = [];\r\n            if(isProxy(this.char)){\r\n                rawChar = toRaw(this.char);\r\n            }\r\n            this.char = {name: rawChar[0].name, description: rawChar[0].description};\r\n        },\r\n        updateCharacter(){\r\n            this.chars = getmyCharacters().filter(char => char.id != id);\r\n            setmyCharacters(this.chars);     \r\n        }\r\n\r\n    } \r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}