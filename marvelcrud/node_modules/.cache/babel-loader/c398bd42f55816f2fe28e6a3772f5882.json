{"ast":null,"code":"// @ is an alias to /src\nimport ReadCRUD from '@/components/ReadCRUD.vue';\nimport { public_key, ts, hash, populatemyCharacters, getmyCharacters, myCharacters } from '../marvel.js';\nimport axios from 'axios';\nexport default {\n  name: 'ReadView',\n\n  //mixins: [populatemyCharacters],\n  data() {\n    return {\n      chars: []\n    };\n  },\n\n  components: {\n    ReadCRUD\n  },\n  created: function () {\n    console.dir(this.chars);\n    this.listCharacters();\n  },\n  methods: {\n    listCharacters() {\n      if (JSON.parse(JSON.stringify(myCharacters)).length == 0) {\n        console.log(\"listCharacters\");\n        axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`).then(result => {\n          console.log(result);\n          result.data.data.results.forEach(element => {\n            populatemyCharacters(element);\n          });\n          console.dir(this.chars);\n          console.dir(myCharacters);\n          this.chars = getmyCharacters();\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        this.chars = getmyCharacters();\n      }\n    },\n\n    deleteCharacter(id) {\n      this.chars = this.chars.filter(char => char.id != id);\n      console.dir(this.chars);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAKA;AACA,OAAOA,QAAP,MAAqB,2BAArB;AACA,SAAQC,UAAR,EAAmBC,EAAnB,EAAsBC,IAAtB,EAA2BC,oBAA3B,EAAgDC,eAAhD,EAAgEC,YAAhE,QAAmF,cAAnF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;;EAEb;EAEAC,IAAI,GAAG;IACD,OAAO;MACHC,KAAK,EAAE;IADJ,CAAP;EAGH,CARU;;EASbC,UAAU,EAAE;IACVX;EADU,CATC;EAYbY,OAAO,EAAC,YAAU;IACZC,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;IACA,KAAKK,cAAL;EACL,CAfY;EAgBbC,OAAO,EAAE;IACHD,cAAc,GAAG;MACb,IAAIE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,YAAf,CAAX,CAAD,CAA2Cc,MAA3C,IAAqD,CAAxD,EAA0D;QACtDP,OAAO,CAACQ,GAAR,CAAY,gBAAZ;QACAd,KAAK,CAACe,GAAN,CAAW,sDAAqDpB,EAAG,WAAUD,UAAW,SAAQE,IAAK,EAArG,EACKoB,IADL,CACWC,MAAD,IAAY;UACdX,OAAO,CAACQ,GAAR,CAAYG,MAAZ;UACAA,MAAM,CAACf,IAAP,CAAYA,IAAZ,CAAiBgB,OAAjB,CAAyBC,OAAzB,CAAiCC,OAAM,IAAK;YACxCvB,oBAAoB,CAACuB,OAAD,CAApB;UACH,CAFD;UAGAd,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;UACAG,OAAO,CAACC,GAAR,CAAYR,YAAZ;UACA,KAAKI,KAAL,GAAaL,eAAe,EAA5B;QACH,CATL,EAUKuB,KAVL,CAUYC,KAAD,IAAW;UACdhB,OAAO,CAACQ,GAAR,CAAYQ,KAAZ;QACH,CAZL;MAaH,CAfD,MAeK;QACD,KAAKnB,KAAL,GAAaL,eAAe,EAA5B;MACJ;IAEH,CArBE;;IAsBHyB,eAAe,CAACC,EAAD,EAAI;MACf,KAAKrB,KAAL,GAAa,KAAKA,KAAL,CAAWsB,MAAX,CAAkBC,IAAG,IAAKA,IAAI,CAACF,EAAL,IAAWA,EAArC,CAAb;MACAlB,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;IACJ;;EAzBG;AAhBI,CAAf","names":["ReadCRUD","public_key","ts","hash","populatemyCharacters","getmyCharacters","myCharacters","axios","name","data","chars","components","created","console","dir","listCharacters","methods","JSON","parse","stringify","length","log","get","then","result","results","forEach","element","catch","error","deleteCharacter","id","filter","char"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\views\\ReadView.vue"],"sourcesContent":["<template>\r\n    <ReadCRUD :characters = \"chars\" :deleteCharacter = \"deleteCharacter\"></ReadCRUD>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport ReadCRUD from '@/components/ReadCRUD.vue'\r\nimport {public_key,ts,hash,populatemyCharacters,getmyCharacters,myCharacters} from '../marvel.js'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ReadView',\r\n  //mixins: [populatemyCharacters],\r\n         \r\n  data() {\r\n        return {\r\n            chars: []\r\n        };\r\n    },\r\n  components: {\r\n    ReadCRUD\r\n  },\r\n  created:function(){\r\n        console.dir(this.chars);\r\n        this.listCharacters();\r\n  },\r\n  methods: {\r\n        listCharacters() {\r\n            if((JSON.parse(JSON.stringify(myCharacters))).length == 0){\r\n                console.log(\"listCharacters\");\r\n                axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\r\n                    .then((result) => {\r\n                        console.log(result);\r\n                        result.data.data.results.forEach(element => {\r\n                            populatemyCharacters(element);\r\n                        }); \r\n                        console.dir(this.chars);\r\n                        console.dir(myCharacters);\r\n                        this.chars = getmyCharacters();\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    }); \r\n            }else{\r\n                this.chars = getmyCharacters();\r\n            }\r\n            \r\n        },\r\n        deleteCharacter(id){\r\n            this.chars = this.chars.filter(char => char.id != id);\r\n            console.dir(this.chars);\r\n        }\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}