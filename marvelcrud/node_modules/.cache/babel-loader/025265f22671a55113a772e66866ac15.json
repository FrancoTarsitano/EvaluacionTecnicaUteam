{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"card\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, \" Characters \", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"card-body\"\n};\nconst _hoisted_5 = {\n  class: \"table\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Id\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Description\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Options\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"btn-group\",\n  role: \"group\",\n  \"aria-label\": \"\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-success\"\n}, \"Edit\"), /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-danger\"\n}, \"Delete\")])], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CreateCRUD = _resolveComponent(\"CreateCRUD\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_CreateCRUD, {\n    character: $props.character\n  }, null, 8\n  /* PROPS */\n  , [\"character\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.characters, character => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: character.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(character.id), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(character.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(character.description), 1\n    /* TEXT */\n    ), _hoisted_7]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;gCACPC,oBAEM,KAFN,EAEM;EAFDD,KAAK,EAAC;AAEL,CAFN,EAAyB,cAAzB,EAEA;AAAA;AAFA;;;EAGKA,KAAK,EAAC;;;EACAA,KAAK,EAAC;;;gCACTC,oBAOQ,OAPR,EAOQ,IAPR,EAOQ,cANJA,oBAKK,IALL,EAKK,IALL,EAKK,cAJDA,oBAAW,IAAX,EAAW,IAAX,EAAI,IAAJ,CAIC,eAHDA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAGC,eAFDA,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CAEC,eADDA,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,CACC,CALL,CAMI,CAPR;;AAAA;;gCAcQA,oBAKK,IALL,EAKK,IALL,EAKK,cAJFA,oBAGM,KAHN,EAGM;EAHDD,KAAK,EAAC,WAGL;EAHiBE,IAAI,EAAC,OAGtB;EAH8B,cAAW;AAGzC,CAHN,gBACKD,oBAA2D,QAA3D,EAA2D;EAAnDE,IAAI,EAAC,QAA8C;EAArCH,KAAK,EAAC;AAA+B,CAA3D,EAA8C,MAA9C,gBACAC,oBAA4D,QAA5D,EAA4D;EAApDE,IAAI,EAAC,QAA+C;EAAtCH,KAAK,EAAC;AAAgC,CAA5D,EAA6C,QAA7C,EAFL,CAIE,CALL;;AAAA;;;;;6DAtBxBI,aAAiDC,qBAAjD,EAAiD;IAApCC,SAAS,EAAEC;EAAyB,CAAjD,EAAiC,IAAjC,EAAiC;EAAA;EAAjC,EAAiC,aAAjC,GACAN,oBAgCM,KAhCN,cAgCM,CA/BFA,oBA8BM,KA9BN,cA8BM,CA7BFO,UA6BE,EA1BFP,oBAyBM,KAzBN,cAyBM,CAxBFA,oBAuBQ,OAvBR,cAuBQ,CAtBJQ,UAsBI,EAdJR,oBAaQ,OAbR,EAaQ,IAbR,EAaQ,oBAXJS,oBAUKC,SAVL,EAUK,IAVL,EAUKC,YAVmBC,eAUnB,EAVMP,SAAuB,IAAd;yBAApBI,oBAUK,IAVL,EAUK;MAVgCI,GAAG,EAAER,SAAS,CAACS;IAU/C,CAVL,GACId,oBAAyB,IAAzB,EAAyB,IAAzB,EAAyBe,iBAAnBV,SAAS,CAACS,EAAS,CAAzB,EAAkB;IAAA;IAAlB,GACAd,oBAA2B,IAA3B,EAA2B,IAA3B,EAA2Be,iBAArBV,SAAS,CAACW,IAAW,CAA3B,EAAoB;IAAA;IAApB,GACAhB,oBAAkC,IAAlC,EAAkC,IAAlC,EAAkCe,iBAA5BV,SAAS,CAACY,WAAkB,CAAlC,EAA2B;IAAA;IAA3B,GACAC,WAJJ;GAUK,CAVL;;EAAA,CAWI,EAbR,CAcI,CAvBR,CAwBE,CAzBN,CA0BE,CA9BN,CA+BE,CAhCN","names":["class","_createElementVNode","role","type","_createVNode","_component_CreateCRUD","character","$props","_hoisted_3","_hoisted_6","_createElementBlock","_Fragment","_renderList","_ctx","key","id","_toDisplayString","name","description","_hoisted_7"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\components\\ReadCRUD.vue"],"sourcesContent":["<template>\r\n    <CreateCRUD :character=\"character\" ></CreateCRUD>\r\n    <div class=\"container\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Characters\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        \r\n                        <tr v-for=\"character in characters\" :key=\"character.id\">\r\n                            <td>{{character.id}}</td>\r\n                            <td>{{character.name}}</td>\r\n                            <td>{{character.description}}</td>\r\n                            <td>\r\n                               <div class=\"btn-group\" role=\"group\" aria-label=\"\">\r\n                                    <button type=\"button\" class=\"btn btn-success\">Edit</button>\r\n                                    <button type=\"button\" class=\"btn btn-danger\">Delete</button>\r\n                               </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {public_key,ts,hash} from '../marvel.js';\r\nimport axios from 'axios'\r\nimport CreateCRUD from './CreateCRUD.vue'\r\n\r\n\r\nexport default {\r\n    name: \"ReadCRUD\",\r\n    // inject: ['newCharacter'],\r\n    props: { character: [] },\r\n    data() {\r\n        return {\r\n            chars: []\r\n        };\r\n    },\r\n    Mounted() {\r\n        this.listCharacters();\r\n    },\r\n    beforeMount() {\r\n        this.listCharacters();\r\n    },\r\n    //created: function () {\r\n    //si mi array de created tiene\r\n    //this.listCharacters();\r\n    //  this.$root.$on(\"newCharacter\", (char) => {\r\n    //     this.characters.push(char);\r\n    //  })\r\n    // components: {\r\n    //     CreateCRUD,\r\n    // },\r\n    methods: {\r\n        listCharacters() {\r\n            axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\r\n                .then((result) => {\r\n                console.log(\"listCharacters\");\r\n                console.log(result);\r\n                result.data.data.results.forEach(element => {\r\n                    if (!element.description) {\r\n                        element.description = \"No description available.\";\r\n                    }\r\n                    this.characters.push(element);\r\n                    //this.chars.push(element);\r\n                });\r\n                if(character){\r\n                this.characters.push(character);\r\n                }\r\n               \r\n            })\r\n                .catch((error) => {\r\n                console.log(error);\r\n            });\r\n            //     },\r\n            //     // addCharacter() {\r\n        }\r\n    },\r\n    components: { CreateCRUD }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}