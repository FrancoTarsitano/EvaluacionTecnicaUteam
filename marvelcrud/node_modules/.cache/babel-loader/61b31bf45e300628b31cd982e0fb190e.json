{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.heroes, heroe => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: heroe.id\n    }, [_createElementVNode(\"div\", null, _toDisplayString(heroe.id), 1\n    /* TEXT */\n    ), _createElementVNode(\"div\", null, _toDisplayString(heroe.name), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;uBACIA,oBAKM,KALN,EAKM,IALN,EAKM,oBAJFA,oBAGMC,SAHN,EAGM,IAHN,EAGMC,YAHeC,YAGf,EAHMC,KAAe,IAAV;yBAAjBJ,oBAGM,KAHN,EAGM;MAHwBK,GAAG,EAAED,KAAK,CAACE;IAGnC,CAHN,GACIC,oBAAuB,KAAvB,EAAuB,IAAvB,EAAuBC,iBAAhBJ,KAAK,CAACE,EAAU,CAAvB,EAAe;IAAA;IAAf,GACAC,oBAAyB,KAAzB,EAAyB,IAAzB,EAAyBC,iBAAlBJ,KAAK,CAACK,IAAY,CAAzB,EAAiB;IAAA;IAAjB,EAFJ;GAGM,CAHN;;EAAA,CAIE,EALN","names":["_createElementBlock","_Fragment","_renderList","$data","heroe","key","id","_createElementVNode","_toDisplayString","name"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\components\\ReadCRUD.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"heroe in heroes\" :key=\"heroe.id\">\r\n            <div>{{heroe.id}}</div>\r\n            <div>{{heroe.name}}</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {public_key,ts,hash} from '../marvel.js';\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    data(){\r\n        return{\r\n            heroes: []\r\n        }\r\n    },\r\n    mounted(){\r\n\r\n            this.listHeroes();  \r\n    },\r\n    // created:function(){\r\n    //     this.listHeroes();\r\n    // },\r\n    methods:{\r\n        listHeroes(){\r\n            axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\r\n            .then((result)=> {\r\n                console.log(result)\r\n                this.heroes.push(result);\r\n            })\r\n            .catch((error) =>{\r\n                console.log(error)\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}