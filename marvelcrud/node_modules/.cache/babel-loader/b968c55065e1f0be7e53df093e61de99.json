{"ast":null,"code":"// @ is an alias to /src\nimport ReadCRUD from '@/components/ReadCRUD.vue';\nimport { public_key, ts, hash, populateAux, getAux, aux } from '../marvel.js';\nimport axios from 'axios';\nexport default {\n  name: 'ReadView',\n\n  //mixins: [populateAux],\n  data() {\n    return {\n      chars: []\n    };\n  },\n\n  components: {\n    ReadCRUD\n  },\n  created: function () {\n    console.dir(this.chars); //console.dir(JSON.parse(JSON.stringify(this.chars)));\n\n    this.listCharacters();\n  },\n  methods: {\n    listCharacters() {\n      if (JSON.parse(JSON.stringify(aux)).length == 0) {\n        console.log(\"listCharacters\");\n        axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`).then(result => {\n          console.log(result);\n          result.data.data.results.forEach(element => {\n            if (!element.description) {\n              element.description = \"No description available.\";\n            }\n\n            populateAux(element);\n          });\n          console.dir(this.chars);\n          console.dir(aux);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n\n      this.chars = getAux();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAKA;AACA,OAAOA,QAAP,MAAqB,2BAArB;AACA,SAAQC,UAAR,EAAmBC,EAAnB,EAAsBC,IAAtB,EAA2BC,WAA3B,EAAuCC,MAAvC,EAA8CC,GAA9C,QAAwD,cAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;;EAEb;EAEAC,IAAI,GAAG;IACD,OAAO;MACHC,KAAK,EAAE;IADJ,CAAP;EAGH,CARU;;EASbC,UAAU,EAAE;IACVX;EADU,CATC;EAYXY,OAAO,EAAC,YAAU;IACdC,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB,EADc,CAEd;;IACI,KAAKK,cAAL;EAET,CAjBY;EAkBbC,OAAO,EAAE;IACHD,cAAc,GAAG;MACb,IAAIE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,GAAf,CAAX,CAAD,CAAkCc,MAAlC,IAA4C,CAA/C,EAAiD;QAC7CP,OAAO,CAACQ,GAAR,CAAY,gBAAZ;QACAd,KAAK,CAACe,GAAN,CAAW,sDAAqDpB,EAAG,WAAUD,UAAW,SAAQE,IAAK,EAArG,EACKoB,IADL,CACWC,MAAD,IAAY;UACdX,OAAO,CAACQ,GAAR,CAAYG,MAAZ;UACAA,MAAM,CAACf,IAAP,CAAYA,IAAZ,CAAiBgB,OAAjB,CAAyBC,OAAzB,CAAiCC,OAAM,IAAK;YACxC,IAAI,CAACA,OAAO,CAACC,WAAb,EAA0B;cACtBD,OAAO,CAACC,WAAR,GAAsB,2BAAtB;YACJ;;YACAxB,WAAW,CAACuB,OAAD,CAAX;UACH,CALD;UAMAd,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;UACAG,OAAO,CAACC,GAAR,CAAYR,GAAZ;QACH,CAXL,EAYKuB,KAZL,CAYYC,KAAD,IAAW;UACdjB,OAAO,CAACQ,GAAR,CAAYS,KAAZ;QACH,CAdL;MAeJ;;MACA,KAAKpB,KAAL,GAAaL,MAAM,EAAnB;IACJ;;EArBG;AAlBI,CAAf","names":["ReadCRUD","public_key","ts","hash","populateAux","getAux","aux","axios","name","data","chars","components","created","console","dir","listCharacters","methods","JSON","parse","stringify","length","log","get","then","result","results","forEach","element","description","catch","error"],"sourceRoot":"","sources":["C:\\VueJSCrud\\marvelcrud\\src\\views\\ReadView.vue"],"sourcesContent":["<template>\r\n    <ReadCRUD :characters = \"chars\"></ReadCRUD>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport ReadCRUD from '@/components/ReadCRUD.vue'\r\nimport {public_key,ts,hash,populateAux,getAux,aux} from '../marvel.js'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ReadView',\r\n  //mixins: [populateAux],\r\n         \r\n  data() {\r\n        return {\r\n            chars: []\r\n        };\r\n    },\r\n  components: {\r\n    ReadCRUD\r\n  },\r\n    created:function(){\r\n        console.dir(this.chars);\r\n        //console.dir(JSON.parse(JSON.stringify(this.chars)));\r\n            this.listCharacters();\r\n          \r\n  },\r\n  methods: {\r\n        listCharacters() {\r\n            if((JSON.parse(JSON.stringify(aux))).length == 0){\r\n                console.log(\"listCharacters\");\r\n                axios.get(`https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${public_key}&hash=${hash}`)\r\n                    .then((result) => {\r\n                        console.log(result);\r\n                        result.data.data.results.forEach(element => {\r\n                            if (!element.description) {\r\n                                element.description = \"No description available.\";\r\n                            }\r\n                            populateAux(element);\r\n                        }); \r\n                        console.dir(this.chars);\r\n                        console.dir(aux);\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                    });\r\n            }\r\n            this.chars = getAux();\r\n        }\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}